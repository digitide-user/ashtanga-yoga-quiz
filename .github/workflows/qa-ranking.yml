name: QA - Ranking (Prod)

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL of deployed site"
        required: false
        default: "https://ashtanga-yoga-quiz.onrender.com"
  push:
    branches: [ main ]

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Ensure we can install deps even if package.json/lock is missing
      - name: Ensure package.json exists
        run: |
          if [ ! -f package.json ]; then
            npm init -y
          fi

      - name: Install Puppeteer (always)
        run: |
          npm i -D puppeteer
          node -e "console.log('puppeteer', require('puppeteer/package.json').version)"

      # Always create the log file first so later steps can append
      - name: Init qa_output.txt
        run: |
          echo '--- [RANK LOGS] ---' > qa_output.txt
          echo "(runner cwd: $(pwd))" >> qa_output.txt
          echo "(repo files:)" >> qa_output.txt
          ls -la >> qa_output.txt
          echo '' >> qa_output.txt

      - name: Run headless QA (produce logs even on failure)
        run: |
          set -o pipefail
          BASE="${{ inputs.base_url }}"
          if [ -z "$BASE" ]; then BASE="https://ashtanga-yoga-quiz.onrender.com"; fi
          export BASE_URL="$BASE"
          echo "BASE=$BASE_URL" | tee -a qa_output.txt
          if [ -f qa/check-ranking.mjs ]; then
            node qa/check-ranking.mjs 2>&1 | tee -a qa_output.txt
          else
            echo "[WARN] qa/check-ranking.mjs not found." | tee -a qa_output.txt
          fi
          echo '' >> qa_output.txt
          echo '--- [GET RANKINGS] ---' >> qa_output.txt
          # If the QA script didn't add a GET line, leave a marker
          grep -q "GET " qa_output.txt || echo "(no GET captured)" >> qa_output.txt

      - name: Append QA logs to Summary
        if: always()
        run: |
          echo '### QA Output' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -n 1000 qa_output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload QA artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qa_output
          path: qa_output.txt
          if-no-files-found: warn
