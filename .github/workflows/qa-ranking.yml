name: QA - Ranking (Prod)

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: 'Base URL'
        required: false
        default: https://ashtanga-yoga-quiz.onrender.com
  push:
    branches: [ main ]

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install deps (ci or install)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Ensure Puppeteer is installed
        run: |
          npm ls puppeteer || npm install -D puppeteer
          node -e "console.log('puppeteer=', require('puppeteer/package.json').version)"
          node -e "console.log('resolve=', require.resolve('puppeteer'))"

      - name: Run headless QA
        env:
          BASE_URL: ${{ github.event.inputs.base_url || 'https://ashtanga-yoga-quiz.onrender.com' }}
        run: node qa/check-ranking.mjs | tee qa_output.txt

      - name: Append QA logs to Summary
        if: always()
        run: |
          echo "## QA Output" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat qa_output.txt >> $GITHUB_STEP_SUMMARY

      - name: Publish QA logs into repo (qa-reports/)
        if: always()
        run: |
          mkdir -p qa-reports
          cp qa_output.txt "qa-reports/qa_${{ github.run_id }}.txt"

      - name: Commit QA log file
        if: always()
        uses: EndBug/add-and-commit@v9
        with:
          add: "qa-reports/qa_${{ github.run_id }}.txt"
          message: "chore(qa): add QA log ${{ github.run_id }}"

      - name: Upload QA artifact
        uses: actions/upload-artifact@v4
        with:
          name: qa_output
          path: qa_output.txt
